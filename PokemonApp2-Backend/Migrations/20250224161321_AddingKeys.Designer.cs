// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonApp2.Data;

#nullable disable

namespace PokemonApp2_Backend.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    [Migration("20250224161321_AddingKeys")]
    partial class AddingKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("PokemonApp2.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FrontDefault")
                        .HasColumnType("TEXT");

                    b.Property<float>("Height")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("PokemonApp2.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Slot1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Slot2")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Slot3")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Slot4")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Slot5")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Slot6")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Slot1");

                    b.HasIndex("Slot2");

                    b.HasIndex("Slot3");

                    b.HasIndex("Slot4");

                    b.HasIndex("Slot5");

                    b.HasIndex("Slot6");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("PokemonApp2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("FavPokemon")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserTeamID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FavPokemon");

                    b.HasIndex("UserTeamID")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PokemonApp2.Models.Team", b =>
                {
                    b.HasOne("PokemonApp2.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("Slot1")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PokemonApp2.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("Slot2")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PokemonApp2.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("Slot3")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PokemonApp2.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("Slot4")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PokemonApp2.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("Slot5")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PokemonApp2.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("Slot6")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("PokemonApp2.Models.User", b =>
                {
                    b.HasOne("PokemonApp2.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("FavPokemon")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PokemonApp2.Models.Team", null)
                        .WithOne()
                        .HasForeignKey("PokemonApp2.Models.User", "UserTeamID");
                });
#pragma warning restore 612, 618
        }
    }
}
